JSP기본정보.txt

*웹 프로그래밍 : 웹 상에서 사용자(기업) 간의 연결(통신)을 가능하게 하는 프로그래밍

HTML : 문자(텍스트) 형태로 웹 문서(document)를 작성하는 언어 => 정적데이터 처리
JSP : 문자(텍스트) 형태로 웹 문서를 작성하는 언어 => 동적 데이터 처리


*정적데이터(자원) : 웹페이지 상에서 사용되는 정적인 데이터
			=> HTML, CSS, JS, 이미지...
*동적데이터(자원) : 웹페이지에서 처리되는 동적인 데이터
			=> 뉴스기사, 날씨 정보, 증권정보 ... => DB에 저장된 정보
			
			
			
** WEB 페이지 처리 방식

[크롬 : 주소x] -> naver -> 요청(request) -> 
										
										             [WEB서버] <-> [WAS서버] <-> [DB]
										             				(동적데이터)

[크롬 : naver] <- naver 페이지(정적데이터) <- 응답(response)

*Tomcat서버는기본적으로 웹서버 기능 + WAS서버 역할 (주기능)


*동적인 프로그래밍 언어 p12 ~

- CGI (Common GateWay Interface) : 웹 서버와 동적 컨텐츠를 생성하기 위한 인터페이스
      초창기 웹 프로그래밍 언어, 프로세스 단위로 처리하게 됨(사용자가 많을수록 느림)
   
   C언어(win), perl언어(unix) => DB와의 연결이 매우 불편함,여려움
   
- ASP (Acitve Server Page) : (.NET) Visual Basic을 기반으로 만들어진 언어 (C#/.NET) 
					-> 'Active-X' 등을 사용한 윈도우 기반의 서버를 사용가능
					=> 플랫폼에 종속적이다.(비독립적), 시스템자원의 효율성,확장성 떨어짐
					
- PHP (Personal Hypertext Preprocessor) : 어떤 플랫폼이든 상관없이 사용가능, 적은 명령어로 처리 가능
					-> C언어를 기반, 무료
					=> 규모가 커지면 관리가 힘들어짐, 보안적측면이 취약 
					ex)온라인 청첩장

- JSP (Java Server Page) : 서블릿개념(JAVA)으로 사용가능하도록 만들어진 언어
					-> 멀티쓰레드 방식의 처리를 지원함(자원을 효율적으로 처리)
					=> Java에 의존적임. p.14장 : 프로레스와 쓰레드
					
*JSP 특징
1) 강력한 이식성 : Java-JVM을 사용하기 때문에 OS상관없이 사용가능
2) 멀티 쓰레딩 지원 : 효율적인 자원 관리
3) MVC 패턴 적용(디자인 패턴-리팩토링) 
4) JSTL,EL 표현식의 제공    ---> 추후 spring까지 가져갈 개념



* HTTP(HyperText Transfer Protocol) 프로토콜  p24 & p25,26

- 요청(Request)
	
	[ 시작(요청) 라인 (주소URL) ]
	[ 헤더 (일반헤더/요청헤더) ]
	[ 본문 body(요청메세지) ]



- 응답(Response)

	[ 시작(응답) 라인 (주소URL) ]
	[ 헤더(일반헤더/응답헤더) ]
	[ 본문 body(응답메세지) ]
					

* 웹 컨테이너(서블릿 컨테이너) : 웹 서버 내부에서 사용되는 모든 정보를 처리하는 대상
			(생성~소멸까지의 동작) / ex)tomcat
			
			
* 액션 태그
<h1></h1>
<jsp:~~>			
			

*자바->IO는 반드시 스트림의 형태로 처리
=> Input Output의 동작은 메모리를 가장 많이 사용하는 작업중 하나


JSP <-> 드라이버 <-> Database(Mysql, maria, MSsql...)
       통신

*JDBC(Java DataBase Connectivity) : 자바랑 데이터베이스랑 연결하는 API
=>DB종류와 상관없이 독립적으로 사용(DB에 따른 사용방법은 상이)







*JAVA 기초 개념
변수 : 데이터 하나를 저장하는 공간
배열 : 동일한 타입 데이터를 여러개 저장
메서드 : 명령어를 한번에 여러 개 저장 
객체 : 사용자정의 데이터타입을 생성





